name: Create Release

on:
  push:
    paths:
      - "version.txt"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile main.py
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/table_creator.exe
          asset_name: table_creator_${{ steps.get_version.outputs.VERSION }}.exe
          asset_content_type: application/octet-stream

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile main.py
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/table_creator
          asset_name: table_creator_${{ steps.get_version.outputs.VERSION }}
          asset_content_type: application/octet-stream
